# Use the official CUDA image as the base
FROM nvidia/cuda:11.1.1-cudnn8-devel-ubuntu18.04

# Install necessary packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    curl \
    ca-certificates \
    libjpeg-dev \
    libpng-dev \
    python3.8 \
    python3.8-dev \
    python3.8-venv \
    python3-pip && \
    rm -rf /var/lib/apt/lists/*

# Set the working directory inside the container
WORKDIR /workspace

# Set CUDA environment variables
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=$CUDA_HOME/bin:$PATH
ENV LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH

# Update alternatives to set Python 3.8 as the default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1 && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1 && \
    update-alternatives --set python3 /usr/bin/python3.8 && \
    update-alternatives --set python /usr/bin/python3.8

# Upgrade pip
RUN python3.8 -m pip install --upgrade pip setuptools wheel
RUN pip install pybind11
# Copy the entire project into the Docker container
COPY . /workspace

RUN pip install -r /workspace/requirements.txt
# Install the project using setup.py
RUN pip install -e /workspace

# Install additional dependencies from requirements.txt
# RUN pip install -r /workspace/requirements.txt

# Define the default command
CMD ["bash"]
